* {
  text-align: center;
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  font-size: 20px;
  transition: 0.5s;
  color: #eee;
}

body {
  background: linear-gradient(to bottom, rgb(204.5, 204.5, 204.5), gray);
  background-repeat: no-repeat;
  background-attachment: fixed;
  position: relative;
  background-size: 100% 100%;
  padding-top: 5%;
}

header {
  position: absolute;
  top: 0;
  width: 100%;
}
header nav {
  gap: 0.5em;
  display: flex;
  justify-content: space-around;
}
header nav span::after {
  content: "o";
  color: transparent;
  padding: 0 0.2rem;
  margin: 0 0 1rem 0.4em;
  font-size: 0.7rem;
  border-radius: 50rem;
  background-color: #eee;
  border: 0.01rem solid #eee;
  animation: faden2 1s ease-in-out forwards infinite;
}
header nav a {
  text-decoration: none;
}

@keyframes faden2 {
  0%, 100% {
    padding: 0 0.21em;
  }
  50% {
    padding: 0 0.2rem;
  }
}
h1 {
  filter: drop-shadow(0 0 3px gray);
}

.joutGroupe {
  gap: 0.5rem;
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
}
.joutGroupe .selectGroup {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 1em;
  margin-bottom: 0.8em;
}

.element:hover::after {
  content: attr(data-title);
  position: fixed;
  margin: 0 0 -10px -10vh;
  text-wrap: none;
  color: #eee;
  opacity: 0.5;
  background-color: #1c1c1c;
  transition: 2s;
  border-radius: 5px;
  padding: 0 0.3em 0.3em 0.3em;
}

input[type=checkbox]:checked + .element:hover::after {
  content: none;
}

button {
  border: 0.5px solid #eee;
  background: transparent;
  height: 35px;
  color: #eee;
  border-radius: 15px;
  padding: 0 8px;
}

#btn-ajouter {
  width: 35px;
  border-radius: 50%;
}

button:hover {
  box-shadow: 0 0 10px #eee;
}

button:active {
  color: aqua;
  background: transparent;
  border: 0.5px solid aqua;
}

input[type=checkbox] {
  display: none;
}

input[type=checkbox]:checked + label::before {
  background-color: #eee;
  filter: blur(1px);
}

label::before {
  content: "o";
  color: transparent;
  padding: 0 0.2rem;
  margin: 0 0.1rem 0 0;
  font-size: 0.7rem;
  border-radius: 50rem;
  border: 0.01rem solid #eee;
}

label {
  opacity: 0.2;
}

label:hover,
input[type=checkbox]:checked + label {
  opacity: 1;
}

#container > div {
  flex: 1 1 40%;
  box-sizing: border-box;
  opacity: 0;
}

#container {
  gap: 10%;
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

#input {
  height: 30px;
  width: 250px;
  font-size: 20px;
  border-radius: 15px;
  margin: 0 0 10px 0;
  border: 0.5px solid #eee;
  color: #eee;
  text-shadow: 0 0 5px gray;
  background: transparent;
}

.inputAnimation {
  animation: faden 5s ease-in-out infinite forwards;
}

@keyframes faden {
  0%, 100% {
    box-shadow: 0 0 0px #eee;
  }
  50% {
    box-shadow: 0 0 10px #eee;
  }
}
input::placeholder {
  text-shadow: none;
}

input:hover {
  animation: none;
}

input:focus {
  box-shadow: 0 0 10px #eee;
  outline: none;
}

select {
  display: none;
  background-color: transparent;
  border: 0.01rem solid #eee;
  border-radius: 5px;
  outline: none;
}
select:hover {
  background-color: #eee;
  color: gray;
}
select option {
  border-radius: 5px;
  color: gray;
  background-color: #eee;
}

#result,
#noms {
  text-shadow: 0 0 10px #eee;
  display: flex;
  align-items: center;
  text-align: center;
  flex-direction: column;
  gap: -5rem;
  color: #000;
}

#result p,
#result p font,
#noms p,
#noms p font {
  margin: 0.3rem 0;
  color: #000;
}

.fouter {
  position: fixed;
  bottom: 0;
  left: 0;
  font-size: 0.5em;
  text-align: center;
  align-items: center;
}
.fouter span {
  font-size: 1em;
}
.fouter a {
  text-decoration: none;
  right: 2px;
  position: fixed;
  color: black;
  font-size: 1em;
}

@media screen and (max-width: 620px) {
  #container > div {
    flex: 1 1 200px;
  }
}
/* ====== PCB BACKGROUND (SVG) ====== */
.pcb {
  position: fixed;
  inset: 0;
  z-index: -2;
  opacity: 0.8;
  pointer-events: none;
  /* background: radial-gradient(800px 400px at 20% 10%, #0c1b38 0%, transparent 60%); */
  mask: linear-gradient(180deg, #000 50%, transparent 100%);
}

.pcb svg {
  width: 1800px;
  height: auto;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) scale(1.2);
  opacity: 0.9;
}

.trace {
  fill: none;
  stroke: gray;
  stroke-width: 2;
  stroke-linecap: round;
  opacity: 0.2;
  filter: drop-shadow(0 0 3px gray);
}

.trace.dim {
  stroke: gray;
}

.pulse {
  stroke-dasharray: 6 12;
  animation: flow 3s linear infinite;
}

@keyframes flow {
  to {
    stroke-dashoffset: 10;
  }
}
.reverse {
  animation: flowReverse 3s linear infinite;
}

@keyframes flowReverse {
  to {
    stroke-dashoffset: -10;
  }
}
.node {
  fill: gray;
  filter: drop-shadow(0 0 6px gray);
}

.node.blink {
  animation: blink 1.8s ease-in-out infinite;
}

@keyframes blink {
  50% {
    opacity: 0.2;
  }
}
.waves {
  position: fixed;
  inset: auto 0 -30px 0;
  height: 220px;
  z-index: -1;
  pointer-events: none;
}

.wave {
  position: absolute;
  inset: auto 0 0 0;
  height: 220px;
  opacity: 0.6;
}

.wave svg {
  width: 200%;
  height: 100%;
}

svg path {
  fill: gray;
}

.wave:nth-child(1) {
  animation: drift 14s ease-in-out infinite forwards;
  opacity: 0.8;
}

.wave:nth-child(2) {
  animation: drift 22s ease-in-out infinite reverse forwards;
  opacity: 0.6;
}

.wave:nth-child(3) {
  animation: drift 38s ease-in-out infinite forwards;
  opacity: 0.4;
}

@keyframes drift {
  0%, 100% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-50%);
  }
}
::-webkit-scrollbar {
  width: 5px;
  background: linear-gradient(to top, gray, #eee);
  transition: width 0.5s;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to top, gray, #eee);
  /* background: $couleur; */
  border-radius: 9px;
}

::-webkit-scrollbar:hover {
  width: 12px;
}

/*# sourceMappingURL=styles.css.map */
